name: Release Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: Create Release and Build Docker Image
    runs-on: ubuntu-latest

    outputs:
      latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.8.1"

      - name: Install Dependencies
        run: npm ci

      - name: Fetch all tags
        run: git fetch --tags

      - name: Run Semantic Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Get Latest Tag
        id: get_latest_tag
        run: echo "latest_tag=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - env:
          VERSION: ${{needs.release.outputs.latest_tag}}
        run: echo "$VERSION"

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Tag Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.release.outputs.latest_tag }}
            ghcr.io/${{ github.repository }}:latest

      - name: Push Docker Image with Version Tag
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ needs.release.outputs.latest_tag }}
          docker push ghcr.io/${{ github.repository }}:latest
